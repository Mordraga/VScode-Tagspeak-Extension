{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Tagspeak",
  "scopeName": "source.tagspeak",
  "patterns": [
    {"include": "#comment"},
    {"include": "#inlineAction"},
    {"include": "#packet"},
    {"include": "#connector"},
    {"include": "#number"},
    {"include": "#string"}
  ],
  "repository": {
    "comment": {
      "patterns": [
        {"name": "comment.line.number-sign.tagspeak", "match": "#.*$"},
        {"name": "comment.line.double-slash.tagspeak", "match": "//.*$"},
        {
          "name": "comment.block.tagspeak",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "inlineAction": {
      "name": "meta.inline-action.tagspeak",
      "begin": "\\[(?=\\s*[A-Za-z_][\\w-]*\\s*\\()",
      "beginCaptures": {
        "0": { "name": "punctuation.section.brackets.inline-action.begin.tagspeak" }
      },
      "end": "\\]",
      "endCaptures": {
        "0": { "name": "punctuation.section.brackets.inline-action.end.tagspeak" }
      },
      "patterns": [
        {
          "name": "entity.name.function.action.tagspeak",
          "match": "\\G\\s*([A-Za-z_][\\w-]*)",
          "captures": {
            "1": { "name": "entity.name.function.action.tagspeak" }
          }
        },
        {
          "name": "meta.inline-action.condition.tagspeak",
          "begin": "\\(",
          "beginCaptures": { "0": { "name": "punctuation.section.group.begin.tagspeak" } },
          "end": "\\)",
          "endCaptures": { "0": { "name": "punctuation.section.group.end.tagspeak" } },
          "patterns": [
            { "include": "#string" },
            { "include": "#number" },
            { "name": "variable.parameter.condition.tagspeak", "match": "[A-Za-z_][\\w-]*" },
            { "name": "keyword.operator.logical.tagspeak", "match": "[=!<>]+" },
            { "name": "punctuation.separator.comma.tagspeak", "match": "," },
            { "name": "punctuation.whitespace.tagspeak", "match": "\\s+" }
          ]
        },
        {
          "name": "meta.inline-action.value.tagspeak",
          "begin": "@",
          "beginCaptures": { "0": { "name": "keyword.operator.at.tagspeak" } },
          "end": "(?=\\])",
          "patterns": [
            { "include": "#string" },
            { "include": "#number" },
            { "name": "variable.other.value.tagspeak", "match": "[A-Za-z_][\\w-]*" },
            { "name": "punctuation.whitespace.tagspeak", "match": "\\s+" }
          ]
        }
      ]
    },
    "packet": {
      "name": "meta.packet.tagspeak",
      "begin": "\\[",
      "beginCaptures": {"0": {"name": "punctuation.section.brackets.begin.tagspeak"}},
      "end": "\\]",
      "endCaptures": {"0": {"name": "punctuation.section.brackets.end.tagspeak"}},
      "patterns": [
        {
          "name": "entity.name.tag.tagspeak",
          "match": "[a-zA-Z:]+"
        },
        {
          "name": "keyword.operator.at.tagspeak",
          "match": "@"
        },
        {"include": "#string"},
        {"include": "#number"}
      ]
    },
    "connector": {
      "name": "keyword.operator.connector.tagspeak",
      "match": ">"
    },
    "number": {
      "name": "constant.numeric.tagspeak",
      "match": "(?<![\\w])\\d+(?:\\.\\d+)?"
    },
    "string": {
      "name": "string.quoted.double.tagspeak",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {"name": "constant.character.escape.tagspeak", "match": "\\\\."}
      ]
    }
  }
}
